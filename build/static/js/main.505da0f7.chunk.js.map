{"version":3,"sources":["components/Footer.js","components/Header.js","components/Board/Cell.js","components/Board/index.js","components/Start/index.js","App.js","serviceWorker.js","redusers/index.js","index.js"],"names":["useStyles","makeStyles","theme","footer","padding","spacing","marginTop","textAlign","backgroundColor","palette","type","grey","Footer","classes","className","Container","maxWidth","Typography","variant","color","Link","target","rel","href","Date","getFullYear","Header","CssBaseline","AppBar","position","Toolbar","this","props","icon","noWrap","title","Object","keys","matrix","length","Fab","size","button","onClick","replay","startGame","restart","PureComponent","StyledHeader","withStyles","marginRight","flexGrow","marginLeft","paddingRight","connect","state","gameStatus","dispatch","Cell","getValue","index","makeMove","e","gameOver","preventDefault","onMakeMove","cell","value","disabled","wonLine","includes","GridListTile","Button","X","O","StyledCell","width","height","fontWeight","lineHeight","fontSize","borderRadius","borderColor","nextPlayer","Board","winner","component","align","player","cardGrid","Grid","container","direction","alignItems","justify","GridList","cellHeight","cols","grid","Array","map","key","StyledBoard","paddingTop","paddingBottom","background","paper","Start","onSelectSingleMode","selectMode","onSelectDoubleMode","onSelectOnlineMode","gutterBottom","item","margin","extendedIcon","StyledStart","mode","App","root","StyledApp","display","flexDirection","minHeight","Boolean","window","location","hostname","match","initialState","winLines","range","start","end","step","i","checkWin","line","prevValue","currentValue","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.505da0f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        textAlign: 'center',\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey[800] : theme.palette.grey[200],\r\n    }\r\n}));\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography variant=\"body1\">This is my first React application!</Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {'Copyright Â© '}\r\n                    <Link target=\"_blank\" rel=\"noopener\" color=\"inherit\" href=\"https://www.linkedin.com/in/d-nevolin/\">\r\n                        Dmitriy Nevolin\r\n                    </Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Container>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer","import React, {PureComponent} from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppIcon from \"@material-ui/icons/Apps\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1)\r\n    }\r\n});\r\n\r\nclass Header extends PureComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n                <CssBaseline/>\r\n                <AppBar position=\"relative\">\r\n                    <Toolbar>\r\n                        <AppIcon className={this.props.classes.icon} />\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={this.props.classes.title}>\r\n                            Tic Tac Toe\r\n                        </Typography>\r\n                        {!!Object.keys(this.props.matrix).length &&\r\n                            <Fab variant=\"extended\" color=\"secondary\" size=\"small\"\r\n                                 className={this.props.classes.button} onClick={()=>this.props.replay()}>\r\n                                <ReplayIcon/> Replay\r\n                            </Fab>\r\n                        }\r\n                        {this.props.startGame &&\r\n                            <Fab variant=\"extended\" color=\"secondary\" size=\"small\"\r\n                                 className={this.props.classes.button} onClick={()=>this.props.restart()}>\r\n                                <CloseIcon /> Close\r\n                            </Fab>\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StyledHeader = withStyles(styles)(Header);\r\nexport default connect(\r\n    state => ({\r\n        startGame: state.gameStatus.startGame,\r\n        matrix: state.gameStatus.matrix\r\n    }),\r\n    dispatch => ({\r\n        replay: () => {\r\n            dispatch({ type: 'REPLAY_GAME' })\r\n        },\r\n        restart: () => {\r\n            dispatch({ type: 'RESTART_GAME' })\r\n        }\r\n    })\r\n)(StyledHeader);","import React, {PureComponent} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst styles = theme => ({\r\n    cell: {\r\n        width: 100,\r\n        height: 100,\r\n        fontWeight: 'bold',\r\n        lineHeight: 0,\r\n        fontSize: '250%',\r\n        borderRadius: 0,\r\n        borderColor: theme.palette.grey[300],\r\n        \"&:hover\": {\r\n            borderColor: theme.palette.grey[300]\r\n        }\r\n    }\r\n});\r\n\r\nclass Cell extends PureComponent {\r\n\r\n    getValue = () => {\r\n        return this.props.matrix[this.props.index] || '';\r\n    };\r\n\r\n    makeMove = (e) => {\r\n        if (this.props.gameOver) {\r\n            e.preventDefault();\r\n        } else if (this.getValue()) {\r\n            e.preventDefault();\r\n        } else {\r\n            this.props.onMakeMove(this.props.index);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const className = this.props.classes.cell;\r\n        const value = this.getValue();\r\n        const colorMap = {\r\n            X: 'primary',\r\n            O: 'secondary'\r\n        };\r\n        let disabled = false;\r\n        let variant = 'outlined';\r\n        if (this.props.gameOver) {\r\n            if (this.props.wonLine && this.props.wonLine.includes(this.props.index)) {\r\n                variant = 'contained';\r\n            } else {\r\n                disabled = true;\r\n            }\r\n        }\r\n        return (\r\n            <GridListTile>\r\n                <Button variant={variant} color={colorMap[value] || 'default'}\r\n                        onClick={this.makeMove}\r\n                        disabled={disabled}\r\n                        className={className}>\r\n                    {value}\r\n                </Button>\r\n            </GridListTile>\r\n        )\r\n    }\r\n}\r\n\r\nCell.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StyledCell = withStyles(styles)(Cell);\r\nexport default connect(\r\n    state => ({\r\n        nextPlayer: state.gameStatus.nextPlayer,\r\n        gameOver: state.gameStatus.gameOver,\r\n        wonLine: state.gameStatus.wonLine,\r\n        matrix: state.gameStatus.matrix\r\n    }),\r\n    dispatch => ({\r\n        onMakeMove: (index) => {\r\n            dispatch({ type: 'MAKE_MOVE', index })\r\n        }\r\n    })\r\n)(StyledCell);","import React, {PureComponent} from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Cell from \"./Cell\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    grid: {\r\n        width: 300\r\n    },\r\n    title: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 0, 1),\r\n    },\r\n    player: {\r\n        padding: theme.spacing(2),\r\n    }\r\n});\r\n\r\nclass Board extends PureComponent {\r\n\r\n    render() {\r\n        const winner = this.props.winner;\r\n        return (\r\n            <main>\r\n                <div className={this.props.classes.title}>\r\n                    <Container maxWidth=\"sm\">\r\n                        {this.props.gameOver &&\r\n                            <Typography component=\"h1\" variant=\"h2\" align=\"center\"\r\n                                color={winner ? (winner === 'X' ? 'primary' : 'secondary') : 'textPrimary'}>\r\n                                {winner ? `Player ${winner === 'X' ? 1 : 2} wins!` : 'Draw!'}\r\n                            </Typography>\r\n                        }\r\n                        {!this.props.gameOver &&\r\n                            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" className={this.props.classes.player}>\r\n                                Player {this.props.nextPlayer==='X'?1:2} to move\r\n                            </Typography>\r\n                        }\r\n                    </Container>\r\n                </div>\r\n                <Container className={this.props.classes.cardGrid} maxWidth=\"md\">\r\n                    <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                        <GridList cellHeight=\"auto\" cols={3} className={this.props.classes.grid}>\r\n                            {[...Array(9).keys()].map(cell => (\r\n                                <Cell key={cell} index={cell} />\r\n                            ))}\r\n                        </GridList>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nBoard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StyledBoard = withStyles(styles)(Board);\r\nexport default connect(\r\n    state => ({\r\n        nextPlayer: state.gameStatus.nextPlayer,\r\n        gameOver: state.gameStatus.gameOver,\r\n        winner: state.gameStatus.winner\r\n    })\r\n)(StyledBoard);","import React, {PureComponent} from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ComputerIcon from \"@material-ui/icons/Computer\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport WifiIcon from \"@material-ui/icons/Wifi\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst styles = theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass Start extends PureComponent {\r\n    onSelectSingleMode = () => {\r\n        this.props.selectMode('SINGLE');\r\n        this.props.startGame();\r\n    };\r\n    onSelectDoubleMode = () => {\r\n        this.props.selectMode('DOUBLE');\r\n        this.props.startGame();\r\n    };\r\n    onSelectOnlineMode = () => {\r\n        this.props.selectMode('ONLINE');\r\n        this.props.startGame();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Select Mode\r\n                </Typography>\r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\r\n                    <Grid container spacing={2} justify=\"center\" direction=\"column\">\r\n                        <Grid item>\r\n                            <Fab variant=\"extended\" disabled={true} color=\"primary\" className={this.props.classes.margin}\r\n                                 onClick={this.onSelectSingleMode}>\r\n                                <ComputerIcon className={this.props.classes.extendedIcon} />\r\n                                1 Player\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Fab variant=\"extended\" color=\"primary\" className={this.props.classes.margin}\r\n                                 onClick={this.onSelectDoubleMode}>\r\n                                <PeopleIcon className={this.props.classes.extendedIcon} />\r\n                                2 Players\r\n                            </Fab>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Fab variant=\"extended\" disabled={true} color=\"primary\" className={this.props.classes.margin}\r\n                                 onClick={this.onSelectOnlineMode}>\r\n                                <WifiIcon className={this.props.classes.extendedIcon} />\r\n                                Play Online\r\n                            </Fab>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Typography>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nStart.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nconst StyledStart = withStyles(styles)(Start);\r\nexport default connect(\r\n    state => ({\r\n        mode: state.mode\r\n    }),\r\n    dispatch => ({\r\n        selectMode: (mode) => {\r\n            dispatch({ type: 'SELECT_MODE', mode })\r\n        },\r\n        startGame: () => {\r\n            dispatch({ type: 'START_GAME' })\r\n        }\r\n    })\r\n)(StyledStart);","import React, {PureComponent} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Footer from \"./components/Footer\"\nimport Header from \"./components/Header\"\nimport Board from \"./components/Board\"\nimport Start from \"./components/Start\"\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n// import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh'\n    }\n};\n\nclass App extends PureComponent {\n    render() {\n        return (\n            // <BrowserRouter>\n            <div className={this.props.classes.root}>\n                <Header/>\n                {this.props.startGame\n                    ? <Board />\n                    : <Start />\n                }\n                <Footer/>\n            </div>\n            // </BrowserRouter>\n        );\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst StyledApp = withStyles(styles)(App);\nexport default connect(\n    state => ({\n        startGame: state.gameStatus.startGame\n    })\n)(StyledApp);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from \"redux\";\r\n\r\nconst initialState = {\r\n    matrix: {},\r\n    nextPlayer: 'X',\r\n    gameOver: false,\r\n    winner: null,\r\n    wonLine: null,\r\n    startGame: false\r\n};\r\nconst winLines = (() => {\r\n    function* range(start, end, step = 1) {\r\n        for (let i = start; i <= end; i = i + step) yield i;\r\n    }\r\n    return [\r\n        ...[0, 3, 6].map(i => [...range(i, i + 2)]),\r\n        ...[0, 1, 2].map(i => [...range(i, 8, 3)]),\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ]\r\n})();\r\nconst checkWin = (state) => {\r\n    for (const line of winLines) {\r\n        let prevValue, currentValue;\r\n        for (const index of line) {\r\n            currentValue = state.matrix[index];\r\n            if (!currentValue || (prevValue && currentValue !== prevValue)) {\r\n                prevValue = null;\r\n                break;\r\n            }\r\n            prevValue = currentValue;\r\n        }\r\n        if (prevValue) {\r\n            state.winner = prevValue;\r\n            state.wonLine = line;\r\n            break;\r\n        }\r\n    }\r\n    if (state.winner || Object.keys(state.matrix).length >= 9) {\r\n        state.gameOver = true;\r\n    }\r\n};\r\nconst gameStatus = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MAKE_MOVE':\r\n            state = {\r\n                ...state,\r\n                nextPlayer: state.nextPlayer === 'X' ? 'O' : 'X',\r\n                matrix: {...state.matrix, [action.index]: state.nextPlayer}\r\n            };\r\n            checkWin(state);\r\n            break;\r\n        case 'START_GAME':\r\n            state = {\r\n                ...state,\r\n                startGame: true\r\n            };\r\n            break;\r\n        case 'REPLAY_GAME':\r\n            state = {\r\n                ...initialState,\r\n                startGame: true\r\n            };\r\n            break;\r\n        case 'RESTART_GAME':\r\n            state = initialState;\r\n            break;\r\n        default:\r\n    }\r\n    return state;\r\n};\r\n\r\nconst selectMode = (state = null, action) => {\r\n    if (action.type === 'SELECT_MODE') {\r\n        state = action.mode;\r\n    } else if (action.type === 'RESTART_GAME') {\r\n        state = null;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default combineReducers({\r\n    gameStatus,\r\n    selectMode\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './redusers';\nconst store = createStore(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}